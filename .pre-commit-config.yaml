# Pre-commit hooks for code quality
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=5000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: detect-private-key
        name: Detect private keys

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3.10
        args: ['--line-length=100']

  # Import sorting with isort
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ['--profile=black', '--line-length=100']

  # Linting with flake8
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Lint with flake8
        args: [
          '--max-line-length=100',
          '--extend-ignore=E203,W503',  # Conflicts with Black
          '--max-complexity=15',
          '--exclude=.git,__pycache__,build,dist,.venv,venv'
        ]
        additional_dependencies: [
          'flake8-docstrings',
          'flake8-bugbear',
          'flake8-comprehensions',
          'flake8-simplify'
        ]

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: Type check with mypy
        args: [
          '--ignore-missing-imports',
          '--no-strict-optional',
          '--warn-redundant-casts',
          '--warn-unused-ignores'
        ]
        additional_dependencies: [
          'types-requests',
          'types-PyYAML',
          'types-redis'
        ]
        exclude: '^tests/|^scripts/'

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        name: Security check with bandit
        args: ['-ll', '-r', 'src/']
        exclude: '^tests/'

  # Docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        name: Check docstring coverage
        args: [
          '--fail-under=70',
          '--ignore-init-method',
          '--ignore-magic',
          '--ignore-module',
          '--ignore-nested-functions',
          '--exclude=tests'
        ]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: ['-d', '{extends: default, rules: {line-length: {max: 120}}}']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        name: Lint Markdown files
        args: ['--fix']

  # Check requirements.txt
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: forbid-crlf
        name: Forbid CRLF line endings
      - id: remove-crlf
        name: Remove CRLF line endings
      - id: forbid-tabs
        name: Forbid tabs
        exclude: '^Makefile$|^\.git'

  # Python upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        name: Upgrade Python syntax
        args: ['--py310-plus']

# Exclude patterns
exclude: '^(\.git|\.venv|venv|env|build|dist|\.eggs|.*\.egg-info|__pycache__|\.pytest_cache|\.mypy_cache|data/|logs/|models/saved/|notebooks/)'

# Fail fast on first error
fail_fast: false

# Default language version
default_language_version:
  python: python3.10
